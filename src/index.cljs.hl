(page "index.html"
 (:require [el.landing-page-vis.dom]
           [hoplon.svg :as svg]
           [thi.ng.ndarray.core :as nd]))


(defn pareto
 [xm a]
 (/ xm (.pow js/Math (rand) (/ 1 a))))

(defn rand-size
 [n]
 (min (/ n 2)
      (pareto 1 2)))

(defn n
 [total per-item]
 (inc (quot total per-item)))

(defelem vis
 [{:keys [height width spacing fg bg]} _]
 (let [n-rows (n width spacing)
       n-cols (n height spacing)
       rand-arr (nd/ndarray
                 :int8
                 (repeatedly (* n-rows n-cols) #(rand-size (quot spacing 2)))
                 [n-rows n-cols])]
  (svg/svg
   :height height
   :width width
   :css {:background-color bg}

   (map
    (fn [[x y]]
     (let [r (/ (dec (nd/pick rand-arr x y))
                2)
           x-px (* x spacing)
           y-px (* y spacing)]
      (svg/circle
       :fill fg
       :cx x-px
       :cy y-px
       :r r)))

    (nd/position-seq rand-arr)))))

(html
  (head
    (link :href "app.css" :rel "stylesheet"))
  (body
    (vis
     :height 1000
     :width 1000
     :spacing 50
     :bg "#102769"
     :fg "#ff8140")
    (div "thingzzz")))
